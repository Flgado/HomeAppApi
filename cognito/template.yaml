AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Cognito

Parameters:
  AppName:
    Type: String
    Description: Name of the application
  ClientDomains:
    Type: CommaDelimitedList
    Description: Array of domains allowed to use this UserPool
  AddGroupsToScopes:
    Type: String
    AllowedValues:
      - 'true'
      - 'false'
    Default: 'false'

Conditions:
  ScopeGroups:
    !Equals [!Ref AddGroupsToScopes, 'true']

Resources:
  UserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: !Sub ${AppName}-UserPool
      AdminCreateUserConfig:
        AllowAdminCreateUserOnly: true
      Policies:
        PasswordPolicy:
          MinimumLength: 8
      AutoVerifiedAttributes:
        - email
      UsernameAttributes:
        - email
      Schema:
        - AttributeDataType: String
          Name: email
          Required: false

  UserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref UserPool
      ClientName: !Sub ${AppName}-UserPoolClient
      GenerateSecret: false
      SupportedIdentityProviders:
        - COGNITO
      CallbackURLs: !Ref ClientDomains
      LogoutURLs: !Ref ClientDomains 
      AllowedOAuthFlowsUserPoolClient: True
      AllowedOAuthFlows:
        - code
      AllowedOAuthScopes:
        - email
        - openid
        - profile

  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub ${AppName}-${AWS::AccountId}
      UserPoolId: !Ref UserPool

  AdminUserGroup:
    Type: AWS::Cognito::UserPoolGroup
    Properties:
      GroupName: Admins
      Description: Admin user group
      Precedence: 0
      UserPoolId: !Ref UserPool

  TriggerFunction:
    Type: AWS::Serverless::Function
    Metadata:
      BuildMethod: makefile
      BuildTarget: build-TriggerFunction
    Condition: ScopeGroups
    Properties:
      CodeUri: .
      Handler: bootstrap
      Runtime: provided.al2
      Architectures:
        - x86_64
      Timeout: 5
      Events:
        CognitoTrigger:
          Type: Cognito
          Properties:
            Trigger: PreTokenGeneration
            UserPool: !Ref UserPool


Outputs:
  UserPoolId:
    Description: "User pool ID"
    Value: !Ref UserPool
    Export:
      Name: !Sub ${AppName}:UserPoolId

  UserPoolClientId:
    Description: "Application client ID"
    Value: !Ref UserPoolClient
  
  AuthUrl:
    Description: "Url used for authentication"
    Value: !Sub https://${UserPoolDomain}.auth.${AWS::Region}.amazoncognito.com